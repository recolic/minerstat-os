#!/bin/bash

# Read settings
FANMIN=$(cat /media/storage/fans.txt 2>/dev/null | grep "FANMIN=" | head -n1 | xargs | sed 's/[^0-9]*//g')
FANMAX=$(cat /media/storage/fans.txt 2>/dev/null | grep "FANMAX=" | head -n1 | xargs | sed 's/[^0-9]*//g')
TARGET=$(cat /media/storage/fans.txt 2>/dev/null | grep "TARGET_TEMP=" | head -n1 | xargs | sed 's/[^0-9]*//g')
TARGET_MEM=$(cat /media/storage/fans.txt 2>/dev/null | grep "TARGET_MEM=" | head -n1 | xargs | sed 's/[^0-9]*//g')
FANDIFF=$(cat /media/storage/fans.txt 2>/dev/null | grep "FANDIFF=" | head -n1 | xargs | sed 's/[^0-9]*//g')

# Override on static
FANSTATIC=0

# Just started
JUSTSTART="0"

echo "Debug read: min: $FANMIN max: $FANMAX tar: $TARGET"

# Navi "2" pwm
PWM=$(cat /dev/shm/fantype.txt 2>/dev/null | xargs | sed 's/[^0-9]*//g')

if [ -z "$PWM" ]; then
  echo "Fan TYPE has no value [Set to 1]"
  PWM="1"
fi

# Forced fans 100%
if [ -f "/home/minerstat/fanforce.pid" ]; then
  PWM="3"
fi

# If no settings
if [ -z "$FANMIN" ]; then
  FANMIN=60
  echo "FANMIN has no value [Set to $FANMIN]"
fi

if [ -z "$FANMAX" ]; then
  FANMAX=100
  echo "FANMAX has no value [Set to $FANMAX]"
fi

if [ -z "$TARGET" ] || [ "$TARGET" = "0" ]; then
  TARGET=56
  echo "TARGET_TEMP has no value [Set to $TARGET]"
fi

if [ -z "$TARGET_MEM" ] || [ "$TARGET_MEM" = "0" ]; then
  TARGET_MEM=80
  echo "TARGET_MEM has no value [Set to $TARGET_MEM]"
fi

TARGETM="$TARGET"

if [ "$FANMIN" = "$FANMAX" ]; then
  SLEEP=75
  FANSTATIC=1
else
  SLEEP=15
fi

if [ -z "$FANDIFF" ] || [ "$FANDIFF" = "0" ]; then
  FANDIFF=0
fi

echo "Debug final: min: $FANMIN max: $FANMAX tar: $TARGET"

# Drivers
TEST_NVIDIA=$(nvidia-smi -L)
NUM_AMD=$(timeout 40 sudo lspci -k | grep VGA | grep -vE "Kaveri|Beavercreek|Sumo|Wrestler|Kabini|Mullins|Temash|Trinity|Richland|Stoney|Carrizo|Raven|Renoir|Picasso|Van" | grep -c "AMD")
if [ -z "$NUM_AMD" ]; then
  NUM_AMD=$(timeout 3 sudo lshw -C display | grep AMD | wc -l)
fi
if [ -z "$NUM_AMD" ]; then
  NUM_AMD=$(timeout 3 sudo lshw -C display | grep driver=amdgpu | wc -l)
fi
TEST_AMD=$NUM_AMD
if [[ $TEST_NVIDIA == *"GPU 0"* ]]; then
  NVIDIA_FAN_NUM=$(sudo nvidia-settings -c :0 -q fans | grep "fan:" | wc -l)
fi

loop() {
  echo "---------------"

  if [ $FANDIFF != "1" ]; then

    if [ $NUM_AMD -gt 0 ]; then

      # restore
      TARGET=$TARGETM

      #FANMIN n MAX
      FANMIN2=$(echo $FANMIN | cut -f1 -d".")
      FANMIN2=$((FANMIN2 * 255 / 100))
      FANMIN2=$(echo $FANMIN2 | cut -f1 -d".")
      FANMIN2=$(printf "%.0f\n" $FANMIN2)

      FANMAX2=$(echo $FANMAX | cut -f1 -d".")
      FANMAX2=$((FANMAX2 * 255 / 100))
      FANMAX2=$(echo $FANMAX2 | cut -f1 -d".")
      FANMAX2=$(printf "%.0f\n" $FANMAX2)

      echo "Debug: FANMIN: $FANMIN2 | FANMAX: $FANMAX2"

      QUERY=$(sudo /home/minerstat/minerstat-os/bin/amdinfo)
      TEST_AMD=$NUM_AMD
      if [ ! -z "$QUERY" ]; then
        x="0"
        y="0"
        PARAM=""
        PARAMS=""
        PARAMSAFETY=""
        until [ $TEST_AMD == "$x" ]; do
          if [ ! -f "/sys/class/drm/card$x/device/pp_table" ]; then
            echo "$x not exist, iGPU ?"
            y=$((y+1))
            if [ ! -f "/sys/class/drm/card$y/device/pp_table" ]; then
              y=$((y+1))
              if [ ! -f "/sys/class/drm/card$y/device/pp_table" ]; then
                y=$((y+1))
              fi
            fi
          fi
          TEMP=$(echo $QUERY | /home/minerstat/minerstat-os/bin/jq -r .[\"$x\"] | awk '{print $1}' | sed 's/[^0-9.]*//g' | cut -d. -f1 | xargs)
          FAN=$(echo $QUERY | /home/minerstat/minerstat-os/bin/jq -r .[\"$x\"] | awk '{print $2}' | sed 's/[^0-9.]*//g' | cut -d. -f1 | xargs)
          # Trick for memtemp
          MEMTEMP=$(cat /sys/class/drm/card$y/device/hwmon/hwmon*/temp3_input 2>/dev/null | sed 's|[^0-9]||g' | xargs)
          if [[ ! -z "$MEMTEMP" ]]; then
            MEMTEMP=$((MEMTEMP/1000))
            echo "memtemp found for $y, val: $MEMTEMP"
            if [[ "$MEMTEMP" -gt "$TARGET_MEM" ]]; then
              echo "memtemp is higher, masking current temp to memtemp to cool down"
              TEMP=$MEMTEMP
              TARGET=$TARGET_MEM
            else
              TARGET=$TARGETM
            fi
          else
            TARGET=$TARGETM
          fi
          if [ ! -z "$TEMP" ]; then
            DIFF=$((TARGET-TEMP))
            MSG="COLD >$DIFF C!"
            # Colder than target temp
            if [ $DIFF -gt 1 ]; then
              CHANGE=5
              if [ $DIFF -gt 2 ]; then
                CHANGE=10
              fi
              if [ $DIFF -gt 5 ]; then
                CHANGE=15
              fi
              if [ $DIFF -gt 10 ]; then
                CHANGE=20
              fi
              if [ $DIFF -gt 20 ]; then
                CHANGE=25
              fi
              if [ $DIFF -gt 30 ]; then
                CHANGE=35
              fi
              NEWFAN=$((FAN-CHANGE))
              # Hotter than target temp
            elif [ $DIFF -lt -1 ]; then
              MSG="WARM >$DIFF C!"
              CHANGE=5
              if [ $DIFF -lt -2 ]; then
                CHANGE=10
              fi
              if [ $DIFF -lt -5 ]; then
                CHANGE=15
              fi
              if [ $DIFF -lt -10 ]; then
                CHANGE=20
              fi
              if [ $DIFF -lt -20 ]; then
                CHANGE=25
              fi
              if [ $DIFF -lt -30 ]; then
                CHANGE=35
              fi
              NEWFAN=$((FAN+CHANGE))
            else
              # No fan changes needed
              #NEWFAN=$FANMIN
              MSG="ON TARGET"
            fi
            if [ $NEWFAN -lt $FANMIN ]; then
              NEWFAN=$FANMIN
            fi
            if [ $NEWFAN -gt $FANMAX ]; then
              NEWFAN=$FANMAX
            fi
            if [ "$MSG" != "ON TARGET" ]; then
              if [ $NEWFAN -gt 100 ]; then
                NEWFAN="100"
              fi
              FANMOD=$((FAN+2))
              if [ ! $FAN -eq $NEWFAN ] && [ ! $FANMOD -eq $NEWFAN ]; then
                PARAM="SET"
                MSG="$MSG,NEWFAN: $NEWFAN%"
              fi
            fi
            if [ ! -z "$PARAM" ]; then
              #sudo nvidia-settings -c :0 $PARAM &> /dev/null
              if [ "$MSG" != "ON TARGET" ]; then
                MAXFAN=$(cat /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_max)
                CURRFAN=$(cat /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1)

                CURRFANFIVE=$((CURRFAN-5))
                echo "MAXFAN FOR $x $y : $MAXFAN"
                FANVALUE=$(echo - | awk "{print $MAXFAN / 100 * $NEWFAN}" | cut -f1 -d".")
                FANVALUE=$(printf "%.0f\n" $FANVALUE)
                FANVALUE=$(awk -v n="$FANVALUE" 'BEGIN{print int((n+5)/10) * 10}')
                #FANVALUE=$((FANVALUE - 1))
                if [ $NEWFAN -gt 99 ]; then
                  FANVALUE=$MAXFAN
                fi
                if [ $FANSTATIC -gt 0 ]; then
                  FANVALUE=$FANMAX2
                  echo "Change skipped because static"
                fi
                #if [ "$CURRFAN" != "$FANVALUE" ]; then
                if [ "$CURRFAN" != "$FANVALUE" ] && [ "$CURRFANFIVE" != "$FANVALUE" ]; then
                  if [ "$PWM" = "1" ]; then
                    sudo su -c "echo 1 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_enable"
                    sudo su -c "echo $FANVALUE > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1"
                  else
                    sudo su -c "echo 2 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_enable"
                    sudo su -c "echo 1 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_enable"
                    sudo su -c "echo 255 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1"
                  fi
                fi
              fi
              if [ ! -z "$PARAM" ]; then
                MSG="$MSG,CURRVAL: $CURRFAN, WANT: $NEWFAN %,FANVAL: $FANVALUE val"
              fi
            fi
          else
            if [ ! -f "/sys/class/drm/card$x/device/pp_table" ]; then
              echo "$x not exist, iGPU ?"
              if [ $TEST_AMD -gt 16 ];then
                x=$TEST_AMD
              fi
              TEST_AMD=$((TEST_AMD+1))
            fi
          fi
          echo "GPU$x [RID: $y] [$TEMP C / $FAN% ] [MSG:$MSG]"
          x=$((x+1))
          y=$((y+1))
        done
      fi
    fi
    if [[ $TEST_NVIDIA == *"GPU 0"* ]]; then
      # Check XSERVER
      SNUMD=$(sudo su minerstat -c "screen -list | grep -c display2")
      if [ "$SNUMD" = "0" ]; then
        sudo su minerstat -c "screen -A -m -d -S display2 sudo X"
      fi
      NVIDIA_NUM=$(nvidia-smi --query-gpu=count --format=csv,noheader | tail -n1 | xargs | sed 's/[^0-9]*//g')
      NVIDIA_INUM=$((NVIDIA_NUM-1))
      NVIDIA2X=$((NVIDIA_NUM*2))
      PARAM=""
      PARAMS=""
      PARAMSAFETY=""
      x="0"
      z="0"
      if [ -z "$NVIDIA_NUM" ]; then
        #sudo nvidia-smi --query-gpu=count --format=csv,noheader | grep "lost"
        echo "SEEMS NVIDIA DRIVER CRASHED - REBOOT REQUIRED !!"
        NVIDIA_NUM=0
      else
        echo "FAN NUM: $NVIDIA_FAN_NUM"
      fi
      until [ $NVIDIA_NUM == "$x" ]; do
        TEMP=$(nvidia-smi -i $x --query-gpu=temperature.gpu --format=csv,noheader | tail -n1 | xargs | sed 's/[^0-9]*//g')
        FAN=$(nvidia-smi -i $x --query-gpu=fan.speed --format=csv,noheader | tail -n1 | xargs | sed 's/[^0-9]*//g')
        if [ ! -z "$TEMP" ]; then
          DIFF=$((TARGET-TEMP))
          MSG="COLD >$DIFF C!"
          # Colder than target temp
          if [ $DIFF -gt 1 ]; then
            CHANGE=5
            if [ $DIFF -gt 2 ]; then
              CHANGE=8
            fi
            if [ $DIFF -gt 5 ]; then
              CHANGE=10
            fi
            if [ $DIFF -gt 10 ]; then
              CHANGE=12
            fi
            if [ $DIFF -gt 20 ]; then
              CHANGE=25
            fi
            if [ $DIFF -gt 30 ]; then
              CHANGE=35
            fi
            NEWFAN=$((FAN-CHANGE))
            if [ $NEWFAN -lt $FANMIN ]; then
              NEWFAN=$FANMIN
            fi
            # Hotter than target temp
          elif [ $DIFF -lt -1 ]; then
            MSG="WARM >$DIFF C!"
            CHANGE=5
            if [ $DIFF -lt -2 ]; then
              CHANGE=8
            fi
            if [ $DIFF -lt -5 ]; then
              CHANGE=10
            fi
            if [ $DIFF -lt -10 ]; then
              CHANGE=12
            fi
            if [ $DIFF -lt -20 ]; then
              CHANGE=25
            fi
            if [ $DIFF -lt -30 ]; then
              CHANGE=35
            fi
            NEWFAN=$((FAN+CHANGE))
            if [ $NEWFAN -gt $FANMAX ]; then
              NEWFAN=$FANMAX
            fi
          else
            # No fan changes needed
            #NEWFAN=$FANMIN
            MSG="ON TARGET"
          fi
          if [ "$MSG" != "ON TARGET" ]; then
            if [ $NEWFAN -gt 100 ]; then
              NEWFAN="100"
            fi
            if [ $FANSTATIC -gt 0 ]; then
              NEWFAN=$FANMAX
            fi
            if [ ! $FAN -eq $NEWFAN ]; then
              sudo /home/minerstat/minerstat-os/core/nv_fanid $x
              ID1=$(cat /dev/shm/id1.txt | xargs)
              ID2=$(cat /dev/shm/id2.txt | xargs)

              if [ -z "$ID1" ] && [ -z "$ID2" ]; then
                PARAM="$PARAM -a [gpu:$x]/GPUFanControlState=1"
                PARAMS="$PARAMS -a [fan:"$z"]/GPUTargetFanSpeed="$NEWFAN""
                if [ "$NVIDIA_FAN_NUM" -gt "$NVIDIA_NUM" ]; then
                  edit=$((z+1))
                  PARAMSAFETY="$PARAMSAFETY -a [fan:"$edit"]/GPUTargetFanSpeed="$NEWFAN""
                fi
              else
                PARAM="$PARAM -a [gpu:$x]/GPUFanControlState=1"
                PARAMS="$PARAMS -a [fan:"$ID1"]/GPUTargetFanSpeed="$NEWFAN""
                #PARAMSAFETY=""
                if [ ! -z "$ID2" ]; then
                  PARAM="$PARAM -a [gpu:$x]/GPUFanControlState=1"
                  PARAMS="$PARAMS -a [fan:"$ID2"]/GPUTargetFanSpeed="$NEWFAN""
                  #PARAMSAFETY=""
                fi
              fi
              MSG="$MSG,NEWFAN: $NEWFAN%"
            fi
          fi
          echo "GPU$x [$TEMP C / $FAN%] [MSG:$MSG]"
        fi
        x=$((x+1))
        y=$((y+1))
        if [ "$NVIDIA_FAN_NUM" -gt "$NVIDIA_NUM" ]; then
          z=$((z+1))
        fi
        z=$((z+1))
      done
      if [ ! -z "$PARAM" ]; then
        sudo su -c "nvidia-settings -c :0 $PARAM $PARAMS $PARAMSAFETY"
      fi
    fi

    sleep $SLEEP
    loop

  else

    echo "Curve process is blocked by ClockTune because different static fan ranges"

    if [[ $JUSTSTART = "0" ]]; then
      JUSTSTART="1"
      #timeout 25 screen -A -m -d -S fan sudo bash /home/minerstat/minerstat-os/bin/setfans.sh &
    fi

    sleep $SLEEP
    loop

  fi

}

if [[ "$PWM" = "3" ]]; then
  while true
  do
    for y in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16; do
      sudo su -c "echo 0 > /sys/class/drm/card$y/device/hwmon/hwmon*/fan1_enable" &> /dev/null
      sudo su -c "echo 2 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_enable" &> /dev/null
      sudo su -c "echo 1 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_enable" &> /dev/null
      sudo su -c "echo 255 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1" &> /dev/null
      sudo su -c "echo 0 > /sys/class/drm/card$y/device/hwmon/hwmon*/pwm1_enable" &> /dev/null
    done
    sleep 2
  done
else
  loop
fi
