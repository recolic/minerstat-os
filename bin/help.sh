#!/bin/bash
BLUE='\e[38;5;69m'
NC='\e[0;37m'
END='\e[0m'

LIGHT=$1
IP=`ifconfig | grep "inet" | grep -v "inet6" | grep -vE "127.0.0.1|169.254|172.17." | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | head -n 1 | grep -o -E '[.0-9]+'`

echo -e "${BLUE}=============== msOS commands ===============${NC}"
echo -e ""
echo -e "======= Information and monitoring ======="
echo -e "${BLUE}miner${NC}\t\tShow mining client screen"
echo -e "${BLUE}agent${NC}\t\tShow mining client + agent screen"
echo -e "${BLUE}mhelp${NC}\t\tShowing this message"
echo -e "${BLUE}minfo${NC}\t\tShow welcome screen and msOS version"
echo -e "${BLUE}mworker${NC}\t\tChange ACCESSKEY & WORKERNAME"
echo -e ""
if [[ "$LIGHT" = "short" ]]; then
  echo -e ""
  echo -e "Connect to this terminal from local network: \e[1mhttp://$IP:4200\e[0m"
  echo -e ""
  echo -e "To see all available commands enter: \e[1mmhelp\e[0m"
  echo -e "To view agent and miner enter: \e[1magent\e[0m"
  echo -e ""
else
  echo -e "======= System ======="
  echo -e "${BLUE}mrecovery${NC}\tRestore system to default"
  echo -e "${BLUE}netrecovery${NC}\tRestore system to default from minerstat servers."
  echo -e "${BLUE}mupdate${NC}\t\tUpdate system (clients, fixes, ...)"
  echo -e "${BLUE}opencl${NC}\t\tSwitch between OpenCL versions. (amdgpu/rocm)"
  echo -e "${BLUE}mreconf${NC}\t\tSimulate first boot: configure DHCP, creating fake dummy"
  echo -e "${BLUE}mlang${NC}\t\tSet keyboard layout (e.g. mlang de)"
  echo -e "${BLUE}force-gen2${NC}\tForce PCIe GEN2"
  echo -e ""
  echo -e "======= System updates ======="
  echo -e "${BLUE}mreflash${NC}\tChange running OS version"
  echo -e "${BLUE}kernel-update${NC}\tUpdate kernel"
  echo -e "${BLUE}nvidia-update${NC}\tUpdate Nvidia drivers"
  echo -e "${BLUE}amd-update${NC}\tUpdate AMD drivers"
  echo -e ""
  echo -e "======= Commands ======="
  echo -e "${BLUE}mstart${NC}\t\t(Re)start mining"
  echo -e "${BLUE}mstop${NC}\t\tStop mining"
  echo -e "${BLUE}mreboot${NC}\t\tReboot the rig"
  echo -e "${BLUE}forcereboot${NC}\tForce Reboot the rig (<0.1 sec)"
  echo -e "${BLUE}mshutdown${NC}\tShut down the rig"
  echo -e "${BLUE}forceshutdown${NC}\tForce Shut down the rig (<0.1 sec)"
  echo -e "${BLUE}update-ctrl${NC}\tEnable/Disable runtime system updates"
  echo -e "${BLUE}snapshot-ctrl${NC}\tEnable/Disable Snapshot logs"
  echo -e "${BLUE}extend${NC}\t\tExtend partitions to volume size"
  echo -e "${BLUE}mclock${NC}\t\tFetch OC from the dashboard"
  echo -e "${BLUE}fan-apply${NC}\tApply FAN settings only"
  echo -e "${BLUE}fan-force${NC}\tForce 100% Fan (AMD RX6000)"
  echo -e ""
  echo -e "======= Debugging ======="
  echo -e "${BLUE}logs${NC}\t\tToogle logs between RAM/Storage"
  echo -e "${BLUE}mgpu${NC}\t\tList detected GPUs for debug reasons"
  echo -e "${BLUE}mfind${NC}\t\tFind GPU (e.g. mfind 03.00.0 will set fans to 0% except GPU with bus ID 03.00.0 for 5 seconds)"
  echo -e "${BLUE}mled${NC}\t\tToggle Nvidia LED Lights ON/OFF"
  echo -e "${BLUE}rmpci${NC}\t\tRemove selected PCIe device(s) from the system"
  echo -e ""
  echo -e "======= Network ======="
  echo -e "${BLUE}netcheck${NC}\tNetwork Tester"
  echo -e "${BLUE}mwifi${NC}\t\tConnect to Wireless networks easily"
  echo -e "${BLUE}static${NC}\t\tYou can now configure static IP with static command."
  echo -e "${BLUE}dhcp${NC}\t\tSwitch back to Dynamic IP"
  echo -e "${BLUE}e1000-update${NC}\tUpdate e1000 driver"
  echo -e ""
  echo -e "======= Mining settings ======="
  echo -e "${BLUE}mpill${NC}\t\tToggle ETHPill ON/OFF"
  echo -e "${BLUE}mswap${NC}\t\tTool for swap file creation"
  echo -e "${BLUE}hugepages${NC}\tSet Custom Hugepages for CPU mining"
  echo -e "${BLUE}viiboost${NC}\tEnable Radeon VII above 100Mhs"
  echo -e "${BLUE}pci-realloc${NC}\tResolves PCI I/O, Bar0 issues"
  echo -e ""
  echo -e "======= CLI Flashing ======="
  echo -e "${BLUE}nvflash${NC}\t\tNVIDIA VBIOS Flasher"
  echo -e "${BLUE}atiflash${NC}\tPolaris (RX400/500) VBIOS Flasher"
  echo -e "${BLUE}amdvbflash${NC}\tNavi/Vega VBIOS Flasher"
  echo -e "${BLUE}amdmemtool${NC}\tAMD Memory Tweak"
  echo -e "${BLUE}nvunload${NC}\tUnload Nvidia drivers for flashing"
  echo -e "${BLUE}nvload${NC}\t\tLoad back nvidia drivers after flash"
  echo -e ""
  echo -e "======= Watchdog control ======="
  echo -e "${BLUE}watchdog-reboot${NC}\tTest USB watchdog reboot"
  echo -e ""
  echo -e "======= Octominer, Minerdude ======="
  echo -e "${BLUE}octo-info${NC}\tDisplay detailed info"
  echo -e "${BLUE}octo-display${NC}\tUpdate mini display"
  echo -e "${BLUE}octo-shutdown${NC}\tShutdown via chassis"
  echo -e "${BLUE}octo-reboot${NC}\tReboot via chassis"
  echo -e "${BLUE}octo-ping${NC}\tBlink blue light for x minutes. (e.g: octo-ping --min 5)"
  echo -e "${BLUE}octo-fan${NC}\tControl chasis fans. (e.g: octo-fan --id 1 --val 200)"
  echo -e "${END}"
fi
